     1                                 %line 1+1 get_pin.asm
     2                                 
     3                                 [global get_pin]
     4                                 
     5                                 [section .data]
     6 00000000 456E74657220342D64-     prompt db "Enter 4-digit PIN: ", 0
     7 00000000 696769742050494E3A-
     8 00000000 2000               
     9                                 
    10                                 [section .bss]
    11 00000000 <gap>                   pin resb 5
    12                                 
    13                                 [section .text]
    14                                 get_pin:
    15 00000000 55                      push rbp
    16 00000001 4889E5                  mov rbp, rsp
    17                                 
    18                                 
    19                                 
    20 00000004 48C7C001000000          mov rax, 1
    21 0000000B 48C7C701000000          mov rdi, 1
    22 00000012 48C7C6[00000000]        mov rsi, prompt
    23 00000019 48C7C214000000          mov rdx, 20
    24 00000020 0F05                    syscall
    25                                 
    26                                 
    27                                 
    28 00000022 48C7C000000000          mov rax, 0
    29 00000029 48C7C700000000          mov rdi, 0
    30 00000030 48C7C6[00000000]        mov rsi, pin
    31 00000037 48C7C205000000          mov rdx, 5
    32 0000003E 0F05                    syscall
    33                                 
    34                                 
    35                                 
    36 00000040 4831C0                  xor rax, rax
    37 00000043 48C7C7[00000000]        mov rdi, pin
    38 0000004A 48C7C10A000000          mov rcx, 10
    39                                 
    40                                 .loop:
    41 00000051 4C0FB607                movzx r8, byte [rdi]
    42 00000055 4983F800                cmp r8, 0
    43 00000059 7414                    je .end_loop
    44                                 
    45 0000005B 4983F80A                cmp r8, 10
    46 0000005F 740E                    je .end_loop
    47                                 
    48 00000061 4983E830                sub r8, '0'
    49 00000065 480FAFC1                imul rax, rcx
    50 00000069 4C01C0                  add rax, r8
    51 0000006C 48FFC7                  inc rdi
    52 0000006F EBDE                    jmp .loop
    53                                 
    54                                 .end_loop:
    55 00000071 C9                      leave
    56 00000072 C3                      ret
