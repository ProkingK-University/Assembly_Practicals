     1                                 %line 1+1 get_pin.asm
     2                                 
     3                                 [global get_pin]
     4                                 
     5                                 [section .data]
     6 00000000 456E74657220342D64-     prompt db "Enter 4-digit PIN: ", 0
     7 00000000 696769742050494E3A-
     8 00000000 2000               
     9                                 
    10                                 [section .bss]
    11 00000000 <gap>                   pin resb 5
    12                                 
    13                                 [section .text]
    14                                 [global _start]
    15                                 
    16                                 _start:
    17                                 get_pin:
    18 00000000 55                      push rbp
    19 00000001 4889E5                  mov rbp, rsp
    20                                 
    21                                 
    22                                 
    23 00000004 48C7C001000000          mov rax, 1
    24 0000000B 48C7C701000000          mov rdi, 1
    25 00000012 48C7C6[00000000]        mov rsi, prompt
    26 00000019 48C7C214000000          mov rdx, 20
    27 00000020 0F05                    syscall
    28                                 
    29                                 
    30                                 
    31 00000022 48C7C000000000          mov rax, 0
    32 00000029 48C7C700000000          mov rdi, 0
    33 00000030 48C7C6[00000000]        mov rsi, pin
    34 00000037 48C7C205000000          mov rdx, 5
    35 0000003E 0F05                    syscall
    36                                 
    37                                 
    38                                 
    39 00000040 4831C0                  xor rax, rax
    40 00000043 48C7C7[00000000]        mov rdi, pin
    41 0000004A 48C7C10A000000          mov rcx, 10
    42                                 
    43                                 .loop:
    44 00000051 4C0FB607                movzx r8, byte [rdi]
    45 00000055 4983F800                cmp r8, 0
    46 00000059 7414                    je .end_loop
    47                                 
    48 0000005B 4983F80A                cmp r8, 10
    49 0000005F 740E                    je .end_loop
    50                                 
    51 00000061 4983E830                sub r8, '0'
    52 00000065 480FAFC1                imul rax, rcx
    53 00000069 4C01C0                  add rax, r8
    54 0000006C 48FFC7                  inc rdi
    55 0000006F EBDE                    jmp .loop
    56                                 
    57                                 .end_loop:
    58 00000071 C9                      leave
    59 00000072 C3                      ret
